<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:TrayAppControl">

    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="{Binding StartCommandName}" Command="{Binding StartCommand}" />
        <MenuItem Header="{Binding StopCommandName}" Command="{Binding StopCommand}" />
        <Separator />
        <MenuItem Header="{Binding ExitCommandName}" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <!--DoubleClickCommand="{Binding ShowWindowCommand}"-->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    ToolTipText="{Binding ToolTipText, UpdateSourceTrigger=PropertyChanged}"
                    ContextMenu="{StaticResource SysTrayMenu}">

        <!-- self-assign a data context (could also be done programmatically) --><!--
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>-->
    </tb:TaskbarIcon>

</ResourceDictionary>